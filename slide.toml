# This is sample slide

# Site metadata (OGP, title, ...)
[meta]
og_image = "https://uta8a.github.io/tomlide.example/tomlide.v1.png"
og_image_description = "Simple slide generator"
og_image_height = "300"
og_image_width = "600"
og_title = "Sample Slide for tomlide"
og_url = "https://uta8a.github.io/tomlide.example/"
title = "r9cc: step 10"
# twitter_card: summary | summary_large_image
twitter_card = "summary_large_image"
# twitter_creator: @<username>
twitter_creator = "@kaito_tateyama"
# twitter_image: cache by Twitter, change url when change twitter image.
twitter_image = "https://uta8a.github.io/tomlide.example/tomlide.v1.png"
# icon: .png | .ico
icon = "https://uta8a.github.io/tomlide.example/tomlide.v1.png"

[[slide]]
text = """
Twitter: @kaito_tateyama
"""
title = "r9cc: Step 10"

[[slide]]
text = """
r9ccの紹介
Step10の実装
今後の実装
"""
title = "目次"

[[slide]]
text = """
@[link](https://github.com/dhivelopers/r9cc)
- 僕が主に開発し、友人にアドバイスをもらっているプロジェクト
- @[*Rust*]製Cコンパイラ
- Step11まで実装済み

気が向いた時に実装
"""
title = "r9ccの紹介"

[[slide]]
text = """
chibiccの return 実装時点でのLOCは524
@[image](./image-2.png)
"""
title = "r9ccの紹介"

[[slide]]
text = """
r9ccの return 実装時点でのLOCは@[*1312*], (chibicc x2...)
@[image](./image-3.png)
"""
title = "r9ccの紹介"

[[slide]]
text = """
tokenizer: semicolonも一旦ASTに変換 → parserへ
@[image](./image-4.png)
"""
title = "r9ccの紹介"

[[slide]]
text = """
テストをreturn使うよう変更
Pythonスクリプトで変換(テストケースはfile管理 → test.sh自動生成)
@[image: テストケース](./image-5.png)
"""
title = "Step10の実装"

[[slide]]
text = """
変数がこれまでに出現しているか？ → HashMap
@[image: Parser構造体がlocal変数のHashMapを保持](./image-6.png)
"""
title = "Step10の実装"

[[slide]]
text = """
tokenizer: 変数判定 → パターンマッチ
@[image](./image-7.png)
"""
title = "Step10の実装"

[[slide]]
text = """
フィボナッチくらいはできるようになりたい
(あわよくばセルフホストCコンパイラをコンパイルできる能力まで...)
"""
title = "今後の実装"

[[slide]]
text = """
このスライドはdenoで作った自作slide生成器で、tomlから生成しています
"""
title = "Thank you!"
